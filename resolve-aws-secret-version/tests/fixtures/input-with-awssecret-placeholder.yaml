apiVersion: apps/v1
kind: Deployment
metadata:
  name: echoserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: echoserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: echoserver
    spec:
      containers:
        - image: ${DOCKER_IMAGE}
          name: echoserver
          envFrom:
            - secretRef:
                # this should be replaced
                name: my-service-${AWS_SECRETS_MANAGER_VERSION_ID}
        - image: envoyproxy/envoy
          name: envoy
          envFrom:
            - secretRef:
                # this should not be replaced
                name: envoy-${AWS_SECRETS_MANAGER_VERSION_ID_ENVOY}
---
apiVersion: mumoshu.github.io/v1alpha1
kind: AWSSecret
metadata:
  name: my-service-${AWS_SECRETS_MANAGER_VERSION_ID}
spec:
  stringDataFrom:
    secretsManagerSecretRef:
      secretId: my-service/develop
      versionId: ${AWS_SECRETS_MANAGER_VERSION_ID}
---
apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app.kubernetes.io/name: echoserver
---
apiVersion: mumoshu.github.io/v1alpha1
kind: AWSSecret
metadata:
  name: docker-hub
spec:
  stringDataFrom:
    secretsManagerSecretRef:
      secretId: docker-hub-dockerconfigjson/staging
      versionId: cb4ba21c-9e84-4b12-ac78-5fe7569a73de
  type: kubernetes.io/dockerconfigjson
