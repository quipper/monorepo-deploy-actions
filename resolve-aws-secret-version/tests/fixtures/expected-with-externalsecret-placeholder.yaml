apiVersion: apps/v1
kind: Deployment
metadata:
  name: echoserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: echoserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: echoserver
    spec:
      containers:
        - image: ${DOCKER_IMAGE}
          name: echoserver
          envFrom:
            - secretRef:
                # this should be replaced
                name: my-service-c7ea50c5-b2be-4970-bf90-2237bef3b4cf
        - image: envoyproxy/envoy
          name: envoy
          envFrom:
            - secretRef:
                # this should not be replaced
                name: envoy-${AWS_SECRETS_MANAGER_VERSION_ID_ENVOY}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: my-service-c7ea50c5-b2be-4970-bf90-2237bef3b4cf
spec:
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  dataFrom:
    - extract:
        key: my-service/develop
        version: uuid/c7ea50c5-b2be-4970-bf90-2237bef3b4cf
---
apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app.kubernetes.io/name: echoserver
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: docker-hub
spec:
  target:
    template:
      type: kubernetes.io/dockerconfigjson
  secretStoreRef:
    name: aws-secrets-manager
    kind: ClusterSecretStore
  dataFrom:
    - extract:
        key: docker-hub-credentials
        version: uuid/2eb0efcf-14ee-4526-b8ce-971ec82b3aca
